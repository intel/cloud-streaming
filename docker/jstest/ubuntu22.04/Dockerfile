# Copyright (C) 2020-2022 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0


# This file is automatically generated from .m4 template.
# To update, modify the template and regenerate.

ARG IMAGE=ubuntu:22.04
FROM $IMAGE AS base

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    curl ca-certificates gpg && \
  rm -rf /var/lib/apt/lists/*

ARG NODESOURCE_KEY_URL="https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
RUN local_key=/usr/share/keyrings/nodesource.gpg && \
  curl -s $NODESOURCE_KEY_URL | gpg --dearmor | tee $local_key >/dev/null && \
  echo "deb [signed-by=$local_key] https://deb.nodesource.com/node_18.x jammy main" >> /etc/apt/sources.list && \
  apt-get update


LABEL vendor="Intel Corporation"

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    gpg \
    nodejs \
    iproute2 \
    sudo \
    wget \
     && \
  rm -rf /var/lib/apt/lists/*



RUN local_key=/usr/share/keyrings/chrome.gpg && \
  curl -s https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor | tee $local_key >/dev/null && \
  echo "deb [signed-by=$local_key arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list && \
  apt-get update

RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    google-chrome-stable && \
  rm -rf /var/lib/apt/lists/*

# Create default container user <user>
RUN groupadd -r user && useradd -lrm -s /bin/bash -g user user
RUN usermod -aG sudo user
RUN sed -i -e "s/%sudo.*/%sudo ALL=(ALL) NOPASSWD:ALL/g" /etc/sudoers


RUN cd /home/user && \
  npm install lodash puppeteer-core png-quality

COPY tests/js/screenshot.js /home/user/


USER user
WORKDIR /home/user

